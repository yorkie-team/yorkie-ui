"use strict";(self.webpackChunkyorkie_ui=self.webpackChunkyorkie_ui||[]).push([[4424],{"./src/components/ui/dialog/Dialog.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,LazyMounting:()=>LazyMounting,Overview:()=>Overview,RenderFn:()=>RenderFn,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Dialog_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),ui=__webpack_require__("./src/components/ui/index.ts"),react_dom=__webpack_require__("./node_modules/next/dist/compiled/react-dom/index.js"),environment_context=__webpack_require__("./node_modules/@ark-ui/react/environment/environment-context.mjs");const Portal=props=>{const{children,container,disabled}=props,isServer=(()=>{const[isServer,setServer]=(0,react.useState)(!0);return(0,react.useEffect)((()=>{setServer(!1)}),[]),isServer})(),getRootNode=(0,environment_context.w)();if(isServer||disabled)return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children});const doc=getRootNode?.().ownerDocument??document,mountNode=container?.current??doc.body;return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:react.Children.map(children,(child=>(0,react_dom.createPortal)(child,mountNode)))})};var _Overview_parameters,_Overview_parameters_docs,_Overview_parameters1,_Controlled_parameters,_Controlled_parameters_docs,_Controlled_parameters1,_LazyMounting_parameters,_LazyMounting_parameters_docs,_LazyMounting_parameters1,_RenderFn_parameters,_RenderFn_parameters_docs,_RenderFn_parameters1,console=__webpack_require__("./node_modules/console-browserify/index.js");const Dialog_stories={title:"OVERLAY / Dialog",argTypes:{closeOnEscapeKeyDown:{control:{type:"boolean"},description:"Whether to close the dialog when the escape key is pressed."},closeOnInteractOutside:{control:{type:"boolean"},description:"Change the font size include: `xs`, `sm`, `md`, `lg`, `xl`, `2xl`, `3xl`, `4xl`, `5xl`, `6xl` and `7xl`."},defaultOpen:{control:{type:"boolean"},description:"The initial open state of the dialog."},dir:{control:{type:"radio"},options:["ltr","rtl"],description:"The documents text/writing direction.",default:"ltr"},finalFocusEl:{description:"\nElement to receive focus when the dialog is closed. `HTMLElement | (() => MaybeElement)`"},initialFocusEl:{description:"\nElement to receive focus when the dialog is opened. `HTMLElement | (() => MaybeElement)`"},lazyMount:{control:{type:"boolean"},description:"Whether to enable lazy mounting."},modal:{control:{type:"boolean"},description:"Whether to prevent pointer interaction outside the element and hide all content below it."},onEscapeKeyDown:{description:"\nCallback to be invoked when the escape key is pressed. `(event: KeyboardEvent) => void`"},onExitComplete:{description:"\nElement to receive focus when the dialog is opened. `() => void`"},onFocusOutside:{description:"\nFunction called when the focus is moved outside the component. `(event: FocusOutsideEvent) => void`"},onInteractOutside:{description:"\nFunction called when an interaction happens outside the component. `(event: InteractOutsideEvent) => void`"},onOpenChange:{description:"\nCallback to be invoked when the dialog is opened or closed. `(details: OpenChangeDetails) => void`"},onPointerDownOutside:{description:"\nFunction called when the pointer is pressed down outside the component. `(event: PointerDownOutsideEvent) => void`"},open:{control:{type:"boolean"},description:"Whether the dialog is open."},present:{control:{type:"boolean"},description:"Whether the node is present (controlled by the user)."},preventScroll:{control:{type:"boolean"},description:"Whether to prevent scrolling behind the dialog when it's opened."},restoreFocus:{control:{type:"boolean"},description:"Whether to restore focus to the element that had focus before the dialog was opened."},role:{description:"\nThe dialog's role. `dialog` | `alertdialog`",default:"dialog"},trapFocus:{control:{type:"boolean"},description:"Whether to trap focus inside the dialog when it's opened."},unmountOnExit:{control:{type:"boolean"},description:"Whether to unmount on exit.",default:"false"}}},Overview={render:args=>(0,jsx_runtime.jsxs)(ui.lG.bL,{...args,children:[(0,jsx_runtime.jsx)(ui.lG.l9,{asChild:!0,children:(0,jsx_runtime.jsx)(ui.$n,{children:"Open Dialog"})}),(0,jsx_runtime.jsxs)(Portal,{children:[(0,jsx_runtime.jsx)(ui.lG.zs,{}),(0,jsx_runtime.jsx)(ui.lG.Pf,{children:(0,jsx_runtime.jsxs)(ui.lG.UC,{children:[(0,jsx_runtime.jsxs)(ui.BJ,{gap:"8",p:"6",children:[(0,jsx_runtime.jsxs)(ui.BJ,{gap:"1",children:[(0,jsx_runtime.jsx)(ui.lG.hE,{children:"Dialog Title"}),(0,jsx_runtime.jsx)(ui.lG.VY,{children:"Dialog Description"})]}),(0,jsx_runtime.jsxs)(ui.BJ,{gap:"3",flexDirection:"row",width:"full",children:[(0,jsx_runtime.jsx)(ui.lG.RQ,{asChild:!0,children:(0,jsx_runtime.jsx)(ui.$n,{variant:"outline",width:"full",children:"Cancel"})}),(0,jsx_runtime.jsx)(ui.$n,{width:"full",children:"Confirm"})]})]}),(0,jsx_runtime.jsx)(ui.lG.RQ,{asChild:!0,position:"absolute",top:"2",right:"2",children:(0,jsx_runtime.jsx)(ui.$n,{"aria-label":"Close Dialog",variant:"ghost",size:"sm",children:(0,jsx_runtime.jsx)(ui.FI.gzW,{})})})]})})]})]})},Controlled=()=>{const[isOpen,setIsOpen]=(0,react.useState)(!1);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ui.$n,{onClick:()=>setIsOpen(!0),children:"Open Dialog"}),(0,jsx_runtime.jsx)(ui.lG.bL,{open:isOpen,onOpenChange:e=>setIsOpen(e.open),children:(0,jsx_runtime.jsxs)(Portal,{children:[(0,jsx_runtime.jsx)(ui.lG.zs,{}),(0,jsx_runtime.jsx)(ui.lG.Pf,{children:(0,jsx_runtime.jsxs)(ui.lG.UC,{children:[(0,jsx_runtime.jsxs)(ui.BJ,{gap:"8",p:"6",children:[(0,jsx_runtime.jsxs)(ui.BJ,{gap:"1",children:[(0,jsx_runtime.jsx)(ui.lG.hE,{children:"Dialog Title"}),(0,jsx_runtime.jsx)(ui.lG.VY,{children:"Dialog Description"})]}),(0,jsx_runtime.jsxs)(ui.BJ,{gap:"3",direction:"row",width:"full",children:[(0,jsx_runtime.jsx)(ui.lG.RQ,{asChild:!0,children:(0,jsx_runtime.jsx)(ui.$n,{variant:"outline",width:"full",children:"Cancel"})}),(0,jsx_runtime.jsx)(ui.$n,{width:"full",children:"Confirm"})]})]}),(0,jsx_runtime.jsx)(ui.lG.RQ,{asChild:!0,position:"absolute",top:"2",right:"2",children:(0,jsx_runtime.jsx)(ui.$n,{"aria-label":"Close Dialog",variant:"ghost",size:"sm",children:(0,jsx_runtime.jsx)(ui.FI.gzW,{})})})]})})]})})]})},LazyMounting=()=>(0,jsx_runtime.jsxs)(ui.lG.bL,{lazyMount:!0,unmountOnExit:!0,onExitComplete:()=>console.log("onExitComplete invoked"),children:[(0,jsx_runtime.jsx)(ui.lG.l9,{children:"Open Dialog"}),(0,jsx_runtime.jsxs)(Portal,{children:[(0,jsx_runtime.jsx)(ui.lG.zs,{}),(0,jsx_runtime.jsx)(ui.lG.Pf,{children:(0,jsx_runtime.jsxs)(ui.lG.UC,{children:[(0,jsx_runtime.jsxs)(ui.BJ,{gap:"8",p:"6",children:[(0,jsx_runtime.jsxs)(ui.BJ,{gap:"1",children:[(0,jsx_runtime.jsx)(ui.lG.hE,{children:"Dialog Title"}),(0,jsx_runtime.jsx)(ui.lG.VY,{children:"Dialog Description"})]}),(0,jsx_runtime.jsxs)(ui.BJ,{gap:"3",direction:"row",width:"full",children:[(0,jsx_runtime.jsx)(ui.lG.RQ,{asChild:!0,children:(0,jsx_runtime.jsx)(ui.$n,{variant:"outline",width:"full",children:"Cancel"})}),(0,jsx_runtime.jsx)(ui.$n,{width:"full",children:"Confirm"})]})]}),(0,jsx_runtime.jsx)(ui.lG.RQ,{asChild:!0,position:"absolute",top:"2",right:"2",children:(0,jsx_runtime.jsx)(ui.$n,{"aria-label":"Close Dialog",variant:"ghost",size:"sm",children:(0,jsx_runtime.jsx)(ui.FI.gzW,{})})})]})})]})]}),RenderFn=()=>(0,jsx_runtime.jsxs)(ui.lG.bL,{lazyMount:!0,unmountOnExit:!0,onExitComplete:()=>console.log("onExitComplete"),children:[(0,jsx_runtime.jsx)(ui.lG.l9,{children:"Open Dialog"}),(0,jsx_runtime.jsxs)(Portal,{children:[(0,jsx_runtime.jsx)(ui.lG.zs,{}),(0,jsx_runtime.jsx)(ui.lG.Pf,{children:(0,jsx_runtime.jsxs)(ui.lG.UC,{children:[(0,jsx_runtime.jsxs)(ui.BJ,{gap:"8",p:"6",children:[(0,jsx_runtime.jsxs)(ui.BJ,{gap:"1",children:[(0,jsx_runtime.jsx)(ui.lG.hE,{children:"Dialog Title"}),(0,jsx_runtime.jsx)(ui.lG.VY,{children:"Dialog Description"})]}),(0,jsx_runtime.jsxs)(ui.BJ,{gap:"3",direction:"row",width:"full",children:[(0,jsx_runtime.jsx)(ui.lG.RQ,{asChild:!0,children:(0,jsx_runtime.jsx)(ui.$n,{variant:"outline",width:"full",children:"Cancel"})}),(0,jsx_runtime.jsx)(ui.$n,{width:"full",children:"Confirm"})]})]}),(0,jsx_runtime.jsx)(ui.lG.RQ,{asChild:!0,position:"absolute",top:"2",right:"2",children:(0,jsx_runtime.jsx)(ui.$n,{"aria-label":"Close Dialog",variant:"ghost",size:"sm",children:(0,jsx_runtime.jsx)(ui.FI.gzW,{})})})]})})]})]});Overview.parameters={...Overview.parameters,docs:{...null===(_Overview_parameters=Overview.parameters)||void 0===_Overview_parameters?void 0:_Overview_parameters.docs,source:{originalSource:'{\n  render: args => {\n    return <Dialog.Root {...args}>\n        <Dialog.Trigger asChild>\n          <Button>Open Dialog</Button>\n        </Dialog.Trigger>\n        <Portal>\n          <Dialog.Backdrop />\n          <Dialog.Positioner>\n            <Dialog.Content>\n              <Stack gap="8" p="6">\n                <Stack gap="1">\n                  <Dialog.Title>Dialog Title</Dialog.Title>\n                  <Dialog.Description>Dialog Description</Dialog.Description>\n                </Stack>\n                <Stack gap="3" flexDirection="row" width="full">\n                  <Dialog.CloseTrigger asChild>\n                    <Button variant="outline" width="full">\n                      Cancel\n                    </Button>\n                  </Dialog.CloseTrigger>\n                  <Button width="full">Confirm</Button>\n                </Stack>\n              </Stack>\n              <Dialog.CloseTrigger asChild position="absolute" top="2" right="2">\n                <Button aria-label="Close Dialog" variant="ghost" size="sm">\n                  <Icons.IconClose />\n                </Button>\n              </Dialog.CloseTrigger>\n            </Dialog.Content>\n          </Dialog.Positioner>\n        </Portal>\n      </Dialog.Root>;\n  }\n}',...null===(_Overview_parameters1=Overview.parameters)||void 0===_Overview_parameters1||null===(_Overview_parameters_docs=_Overview_parameters1.docs)||void 0===_Overview_parameters_docs?void 0:_Overview_parameters_docs.source}}},Controlled.parameters={...Controlled.parameters,docs:{...null===(_Controlled_parameters=Controlled.parameters)||void 0===_Controlled_parameters?void 0:_Controlled_parameters.docs,source:{originalSource:'() => {\n  const [isOpen, setIsOpen] = useState(false);\n  return <>\n      <Button onClick={() => setIsOpen(true)}>Open Dialog</Button>\n      <Dialog.Root open={isOpen} onOpenChange={e => setIsOpen(e.open)}>\n        <Portal>\n          <Dialog.Backdrop />\n          <Dialog.Positioner>\n            <Dialog.Content>\n              <Stack gap="8" p="6">\n                <Stack gap="1">\n                  <Dialog.Title>Dialog Title</Dialog.Title>\n                  <Dialog.Description>Dialog Description</Dialog.Description>\n                </Stack>\n                <Stack gap="3" direction="row" width="full">\n                  <Dialog.CloseTrigger asChild>\n                    <Button variant="outline" width="full">\n                      Cancel\n                    </Button>\n                  </Dialog.CloseTrigger>\n                  <Button width="full">Confirm</Button>\n                </Stack>\n              </Stack>\n              <Dialog.CloseTrigger asChild position="absolute" top="2" right="2">\n                <Button aria-label="Close Dialog" variant="ghost" size="sm">\n                  <Icons.IconClose />\n                </Button>\n              </Dialog.CloseTrigger>\n            </Dialog.Content>\n          </Dialog.Positioner>\n        </Portal>\n      </Dialog.Root>\n    </>;\n}',...null===(_Controlled_parameters1=Controlled.parameters)||void 0===_Controlled_parameters1||null===(_Controlled_parameters_docs=_Controlled_parameters1.docs)||void 0===_Controlled_parameters_docs?void 0:_Controlled_parameters_docs.source}}},LazyMounting.parameters={...LazyMounting.parameters,docs:{...null===(_LazyMounting_parameters=LazyMounting.parameters)||void 0===_LazyMounting_parameters?void 0:_LazyMounting_parameters.docs,source:{originalSource:'() => {\n  return <Dialog.Root lazyMount unmountOnExit onExitComplete={() => console.log(\'onExitComplete invoked\')}>\n      <Dialog.Trigger>Open Dialog</Dialog.Trigger>\n      <Portal>\n        <Dialog.Backdrop />\n        <Dialog.Positioner>\n          <Dialog.Content>\n            <Stack gap="8" p="6">\n              <Stack gap="1">\n                <Dialog.Title>Dialog Title</Dialog.Title>\n                <Dialog.Description>Dialog Description</Dialog.Description>\n              </Stack>\n              <Stack gap="3" direction="row" width="full">\n                <Dialog.CloseTrigger asChild>\n                  <Button variant="outline" width="full">\n                    Cancel\n                  </Button>\n                </Dialog.CloseTrigger>\n                <Button width="full">Confirm</Button>\n              </Stack>\n            </Stack>\n            <Dialog.CloseTrigger asChild position="absolute" top="2" right="2">\n              <Button aria-label="Close Dialog" variant="ghost" size="sm">\n                <Icons.IconClose />\n              </Button>\n            </Dialog.CloseTrigger>\n          </Dialog.Content>\n        </Dialog.Positioner>\n      </Portal>\n    </Dialog.Root>;\n}',...null===(_LazyMounting_parameters1=LazyMounting.parameters)||void 0===_LazyMounting_parameters1||null===(_LazyMounting_parameters_docs=_LazyMounting_parameters1.docs)||void 0===_LazyMounting_parameters_docs?void 0:_LazyMounting_parameters_docs.source}}},RenderFn.parameters={...RenderFn.parameters,docs:{...null===(_RenderFn_parameters=RenderFn.parameters)||void 0===_RenderFn_parameters?void 0:_RenderFn_parameters.docs,source:{originalSource:'() => {\n  return <Dialog.Root lazyMount unmountOnExit onExitComplete={() => console.log(\'onExitComplete\')}>\n      <Dialog.Trigger>Open Dialog</Dialog.Trigger>\n      <Portal>\n        <Dialog.Backdrop />\n        <Dialog.Positioner>\n          <Dialog.Content>\n            <Stack gap="8" p="6">\n              <Stack gap="1">\n                <Dialog.Title>Dialog Title</Dialog.Title>\n                <Dialog.Description>Dialog Description</Dialog.Description>\n              </Stack>\n              <Stack gap="3" direction="row" width="full">\n                <Dialog.CloseTrigger asChild>\n                  <Button variant="outline" width="full">\n                    Cancel\n                  </Button>\n                </Dialog.CloseTrigger>\n                <Button width="full">Confirm</Button>\n              </Stack>\n            </Stack>\n            <Dialog.CloseTrigger asChild position="absolute" top="2" right="2">\n              <Button aria-label="Close Dialog" variant="ghost" size="sm">\n                <Icons.IconClose />\n              </Button>\n            </Dialog.CloseTrigger>\n          </Dialog.Content>\n        </Dialog.Positioner>\n      </Portal>\n    </Dialog.Root>;\n}',...null===(_RenderFn_parameters1=RenderFn.parameters)||void 0===_RenderFn_parameters1||null===(_RenderFn_parameters_docs=_RenderFn_parameters1.docs)||void 0===_RenderFn_parameters_docs?void 0:_RenderFn_parameters_docs.source}}};const __namedExportsOrder=["Overview","Controlled","LazyMounting","RenderFn"]}}]);