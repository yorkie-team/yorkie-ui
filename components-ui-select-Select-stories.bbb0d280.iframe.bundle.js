"use strict";(self.webpackChunkyorkie_ui=self.webpackChunkyorkie_ui||[]).push([[4428],{"./src/components/ui/select/Select.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,Customization:()=>Customization,Multiple:()=>Multiple,MultipleSelection:()=>MultipleSelection,Overview:()=>Overview,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Users_JLXM9012KP_Desktop_Naver_yorkie_ui_poc_node_modules_next_dist_compiled_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/extends.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_components_ui__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/ui/index.ts"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;const __WEBPACK_DEFAULT_EXPORT__={title:"FORM / Select",argTypes:{closeOnSelect:{control:{type:"boolean"},description:"Whether the select should close after an item is selected"},defaultValue:{control:"text",description:"\nThe initial value of the select. `string[]`"},dir:{control:{type:"radio"},options:["ltr","rtl"],description:"The documents text/writing direction.",default:"ltr"},disabled:{control:{type:"boolean"},description:"Whether the select is disabled"},form:{control:{type:"boolean"},description:"The associate form of the underlying select."},getRootNode:{control:{type:"boolean"},description:"\nA root node to correctly resolve document in custom environments. E.x.: Iframes, Electron. `() => ShadowRoot | Node | Document"},highlightedValue:{control:{type:"text"},description:"The key of the highlighted item"},invalid:{control:{type:"boolean"},description:"Whether the select is invalid"},isItemDisabled:{description:"\nWhether the item is disabled. `(item: T) => boolean`"},itemToString:{description:"\nThe label of the item. `(item: T) => string`"},itemToValue:{description:"\nThe value of the item. `(item: T) => string`"},lazyMount:{control:{type:"boolean"},description:"Whether to enable lazy mounting"},loop:{control:{type:"boolean"},description:"Whether to loop the keyboard navigation through the options"},multiple:{control:{type:"boolean"},description:"Whether to loop the keyboard navigation through the options"},name:{control:{type:"text"},description:"The `name` attribute of the underlying select."},onExitComplete:{description:"\nFunction called when the animation ends in the closed state. `() => void`"},onFocusOutside:{description:"\nFunction called when the focus is moved outside the component. `(event: FocusOutsideEvent) => void`"},onHighlightChange:{description:"\nThe callback fired when the highlighted item changes. `(details: HighlightChangeDetails<T>) => void`"},onInteractOutside:{description:"\nFunction called when an interaction happens outside the component. `(event: InteractOutsideEvent) => void`"},onOpenChange:{description:"\nFunction called when the popup is opened. `(details: OpenChangeDetails) => void`"},onPointerDownOutside:{description:"\nFunction called when the pointer is pressed down outside the component. `(details: ValueChangeDetails<T>) => void`"},onValueChange:{description:"\nThe callback fired when the selected item changes. `(details: ValueChangeDetails<T>) => void`"},open:{control:{type:"boolean"},description:"Whether the select menu is open"},positioning:{description:"\nThe positioning options of the menu. `PositioningOptions`"},present:{control:{type:"boolean"},description:"Whether the node is present (controlled by the user)"},selectOnBlur:{control:{type:"boolean"},description:"Whether to select the highlighted item when the user presses Tab, and the menu is open."},unmountOnExit:{control:{type:"boolean"},description:"Whether to unmount on exit."},value:{control:"text",description:"The keys of the selected items"}}};var Overview={render:function render(args){var items=[{label:"React",value:"react"},{label:"Solid",value:"solid"},{label:"Svelte",value:"svelte",disabled:!0},{label:"Vue",value:"vue"}];return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.bL,(0,_Users_JLXM9012KP_Desktop_Naver_yorkie_ui_poc_node_modules_next_dist_compiled_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_2__.A)({},args,{positioning:{sameWidth:!0},width:"2xs",height:"280px",items}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.JU,null,"Framework"),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Ec,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.l9,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.zp,{placeholder:"Select a Framework"}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.FI.Pl9,null))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Pf,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.UC,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.te,{id:"framework"},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.bB,{htmlFor:"framework"},"Framework"),items.map((function(item){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.q7,{key:item.value,item},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.p4,null,item.label),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.VF,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.FI.Pl9,null)))}))))))}},Customization={render:function render(){var items=[{label:"React",value:"react"},{label:"Solid",value:"solid"},{label:"Vue",value:"vue"},{label:"Svelte",value:"svelte",disabled:!0}];return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.bL,{positioning:{sameWidth:!0},width:"2xs",height:"280px",items},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.JU,null,"Framework"),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Ec,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.l9,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.zp,{placeholder:"Select a Framework"}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.C1,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.FI.Pl9,null))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Gb,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.$n,null,"Clear"))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Pf,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.UC,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.te,{id:"framework"},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.bB,{htmlFor:"framework"},"Frameworks"),items.map((function(item){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.q7,{key:item.value,item},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.p4,null,item.label),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.VF,null,"✓"))}))))))}},MultipleSelection={render:function render(){var items=[{label:"React",value:"react"},{label:"Solid",value:"solid"},{label:"Vue",value:"vue"},{label:"Svelte",value:"svelte",disabled:!0}];return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.bL,{positioning:{sameWidth:!0},width:"2xs",height:"280px",items,multiple:!0},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.JU,null,"Framework"),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Ec,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.l9,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.zp,{placeholder:"Select a Framework"}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.C1,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.FI.Pl9,null))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Gb,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.$n,null,"Clear"))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Pf,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.UC,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.te,{id:"framework"},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.bB,{htmlFor:"framework"},"Frameworks"),items.map((function(item){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.q7,{key:item.value,item},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.p4,null,item.label),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.VF,null,"✓"))}))))))}},Multiple={render:function render(){var items=[{label:"React",value:"react"},{label:"Solid",value:"solid"},{label:"Vue",value:"vue"},{label:"Svelte",value:"svelte",disabled:!0}];return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.bL,{items,multiple:!0,width:"2xs"},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.JU,null,"Framework"),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Ec,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.l9,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.zp,{placeholder:"Select a Framework"}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.C1,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.FI.Pl9,null))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Gb,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.$n,{variant:"solid"},"Clear"))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Pf,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.UC,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.te,{id:"framework"},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.bB,{htmlFor:"framework"},"Frameworks"),items.map((function(item){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.q7,{key:item.value,item},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.p4,null,item.label),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.VF,null,"✓"))}))))))}},Controlled=function Controlled(){var setSelectedItems=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({})[1],items=[{label:"React",value:"react"},{label:"Solid",value:"solid"},{label:"Vue",value:"vue"},{label:"Svelte",value:"svelte",disabled:!0}];return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.bL,{items,width:"2xs",onValueChange:function onValueChange(e){return setSelectedItems(e.items)}},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.JU,null,"Framework"),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Ec,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.l9,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.zp,{placeholder:"Select a Framework"}),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.C1,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.FI.Pl9,null))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Gb,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.$n,{variant:"solid"},"Clear"))),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.Pf,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.UC,null,__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.te,{id:"framework"},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.bB,{htmlFor:"framework"},"Frameworks"),items.map((function(item){return __jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.q7,{key:item.value,item},__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.p4,null,item.label),__jsx(_components_ui__WEBPACK_IMPORTED_MODULE_1__.l6.VF,null,"✓"))}))))))};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const items = [{\n      label: 'React',\n      value: 'react'\n    }, {\n      label: 'Solid',\n      value: 'solid'\n    }, {\n      label: 'Svelte',\n      value: 'svelte',\n      disabled: true\n    }, {\n      label: 'Vue',\n      value: 'vue'\n    }];\n    return <Select.Root {...args} positioning={{\n      sameWidth: true\n    }} width=\"2xs\" height=\"280px\" items={items}>\n        <Select.Label>Framework</Select.Label>\n        <Select.Control>\n          <Select.Trigger>\n            <Select.ValueText placeholder={'Select a Framework'} />\n            <Icons.IconArrow />\n          </Select.Trigger>\n        </Select.Control>\n        <Select.Positioner>\n          <Select.Content>\n            <Select.ItemGroup id=\"framework\">\n              <Select.ItemGroupLabel htmlFor=\"framework\">Framework</Select.ItemGroupLabel>\n              {items.map(item => <Select.Item key={item.value} item={item}>\n                  <Select.ItemText>{item.label}</Select.ItemText>\n                  <Select.ItemIndicator>\n                    <Icons.IconArrow />\n                  </Select.ItemIndicator>\n                </Select.Item>)}\n            </Select.ItemGroup>\n          </Select.Content>\n        </Select.Positioner>\n      </Select.Root>;\n  }\n}",...Overview.parameters?.docs?.source}}},Customization.parameters={...Customization.parameters,docs:{...Customization.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    type Item = {\n      label: string;\n      value: string;\n      disabled?: boolean;\n    };\n    const items: Item[] = [{\n      label: 'React',\n      value: 'react'\n    }, {\n      label: 'Solid',\n      value: 'solid'\n    }, {\n      label: 'Vue',\n      value: 'vue'\n    }, {\n      label: 'Svelte',\n      value: 'svelte',\n      disabled: true\n    }];\n    return <Select.Root positioning={{\n      sameWidth: true\n    }} width=\"2xs\" height=\"280px\" items={items}>\n        <Select.Label>Framework</Select.Label>\n        <Select.Control>\n          <Select.Trigger>\n            <Select.ValueText placeholder=\"Select a Framework\" />\n            <Select.Indicator>\n              <Icons.IconArrow />\n            </Select.Indicator>\n          </Select.Trigger>\n          <Select.ClearTrigger>\n            <Button>Clear</Button>\n          </Select.ClearTrigger>\n        </Select.Control>\n        <Select.Positioner>\n          <Select.Content>\n            <Select.ItemGroup id=\"framework\">\n              <Select.ItemGroupLabel htmlFor=\"framework\">Frameworks</Select.ItemGroupLabel>\n              {items.map(item => <Select.Item key={item.value} item={item}>\n                  <Select.ItemText>{item.label}</Select.ItemText>\n                  <Select.ItemIndicator>✓</Select.ItemIndicator>\n                </Select.Item>)}\n            </Select.ItemGroup>\n          </Select.Content>\n        </Select.Positioner>\n      </Select.Root>;\n  }\n}",...Customization.parameters?.docs?.source}}},MultipleSelection.parameters={...MultipleSelection.parameters,docs:{...MultipleSelection.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    type Item = {\n      label: string;\n      value: string;\n      disabled?: boolean;\n    };\n    const items: Item[] = [{\n      label: 'React',\n      value: 'react'\n    }, {\n      label: 'Solid',\n      value: 'solid'\n    }, {\n      label: 'Vue',\n      value: 'vue'\n    }, {\n      label: 'Svelte',\n      value: 'svelte',\n      disabled: true\n    }];\n    return <Select.Root positioning={{\n      sameWidth: true\n    }} width=\"2xs\" height=\"280px\" items={items} multiple>\n        <Select.Label>Framework</Select.Label>\n        <Select.Control>\n          <Select.Trigger>\n            <Select.ValueText placeholder=\"Select a Framework\" />\n            <Select.Indicator>\n              <Icons.IconArrow />\n            </Select.Indicator>\n          </Select.Trigger>\n          <Select.ClearTrigger>\n            <Button>Clear</Button>\n          </Select.ClearTrigger>\n        </Select.Control>\n        <Select.Positioner>\n          <Select.Content>\n            <Select.ItemGroup id=\"framework\">\n              <Select.ItemGroupLabel htmlFor=\"framework\">Frameworks</Select.ItemGroupLabel>\n              {items.map(item => <Select.Item key={item.value} item={item}>\n                  <Select.ItemText>{item.label}</Select.ItemText>\n                  <Select.ItemIndicator>✓</Select.ItemIndicator>\n                </Select.Item>)}\n            </Select.ItemGroup>\n          </Select.Content>\n        </Select.Positioner>\n      </Select.Root>;\n  }\n}",...MultipleSelection.parameters?.docs?.source}}},Multiple.parameters={...Multiple.parameters,docs:{...Multiple.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    type Item = {\n      label: string;\n      value: string;\n      disabled?: boolean;\n    };\n    const items: Item[] = [{\n      label: 'React',\n      value: 'react'\n    }, {\n      label: 'Solid',\n      value: 'solid'\n    }, {\n      label: 'Vue',\n      value: 'vue'\n    }, {\n      label: 'Svelte',\n      value: 'svelte',\n      disabled: true\n    }];\n    return <Select.Root items={items} multiple width=\"2xs\">\n        <Select.Label>Framework</Select.Label>\n        <Select.Control>\n          <Select.Trigger>\n            <Select.ValueText placeholder=\"Select a Framework\" />\n            <Select.Indicator>\n              <Icons.IconArrow />\n            </Select.Indicator>\n          </Select.Trigger>\n          <Select.ClearTrigger>\n            <Button variant=\"solid\">Clear</Button>\n          </Select.ClearTrigger>\n        </Select.Control>\n        <Select.Positioner>\n          <Select.Content>\n            <Select.ItemGroup id=\"framework\">\n              <Select.ItemGroupLabel htmlFor=\"framework\">Frameworks</Select.ItemGroupLabel>\n              {items.map(item => <Select.Item key={item.value} item={item}>\n                  <Select.ItemText>{item.label}</Select.ItemText>\n                  <Select.ItemIndicator>✓</Select.ItemIndicator>\n                </Select.Item>)}\n            </Select.ItemGroup>\n          </Select.Content>\n        </Select.Positioner>\n      </Select.Root>;\n  }\n}",...Multiple.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"() => {\n  type Item = {\n    label: string;\n    value: string;\n    disabled?: boolean;\n  };\n  const [, setSelectedItems] = useState({});\n  const items: Item[] = [{\n    label: 'React',\n    value: 'react'\n  }, {\n    label: 'Solid',\n    value: 'solid'\n  }, {\n    label: 'Vue',\n    value: 'vue'\n  }, {\n    label: 'Svelte',\n    value: 'svelte',\n    disabled: true\n  }];\n  return <Select.Root items={items} width=\"2xs\" onValueChange={e => setSelectedItems(e.items)}>\n      <Select.Label>Framework</Select.Label>\n      <Select.Control>\n        <Select.Trigger>\n          <Select.ValueText placeholder=\"Select a Framework\" />\n          <Select.Indicator>\n            <Icons.IconArrow />\n          </Select.Indicator>\n        </Select.Trigger>\n        <Select.ClearTrigger>\n          <Button variant=\"solid\">Clear</Button>\n        </Select.ClearTrigger>\n      </Select.Control>\n      <Select.Positioner>\n        <Select.Content>\n          <Select.ItemGroup id=\"framework\">\n            <Select.ItemGroupLabel htmlFor=\"framework\">Frameworks</Select.ItemGroupLabel>\n            {items.map(item => <Select.Item key={item.value} item={item}>\n                <Select.ItemText>{item.label}</Select.ItemText>\n                <Select.ItemIndicator>✓</Select.ItemIndicator>\n              </Select.Item>)}\n          </Select.ItemGroup>\n        </Select.Content>\n      </Select.Positioner>\n    </Select.Root>;\n}",...Controlled.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","Customization","MultipleSelection","Multiple","Controlled"]}}]);